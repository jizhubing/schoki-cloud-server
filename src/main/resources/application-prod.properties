server.port=8080

spring.profiles.active=/dev

### LOGGING CONFIG
logging.config=classpath:logging/logback.xml
logging.level.*=INFO

druid.url=jdbc:mysql://127.0.0.1:3306/schoki?useUnicode=true&characterEncoding=utf8&autoReconnect=true&rewriteBatchedStatements=true
druid.driver-class=com.mysql.jdbc.Driver
druid.username=root
druid.password=696181
druid.initial-size=1
druid.min-idle=1
druid.max-active=20
druid.test-on-borrow=true

#mybatis.mapper-locations=classpath:com/battcn/mapper/*.xml
mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.type-aliases-package=com.schoki.xzddz.server.model.po
# 驼峰命名规范 如：数据库字段是  order_id 那么 实体字段就要写成 orderId
mybatis.configuration.map-underscore-to-camel-case=true
mapper.identity=MYSQL
mapper.mappers=tk.mybatis.mapper.common.BaseMapper
# 设置 insert 和 update 中，是否判断字符串类型!=''
mapper.not-empty=true
# 枚举按简单类型处理
mapper.enum-as-simple-type=true
######### 分页插件 ##########
pagehelper.helper-dialect=mysql
pagehelper.params=count=countSql
pagehelper.reasonable=false
pagehelper.support-methods-arguments=true

spring.redis.host=localhost
#spring.redis.password=battcn
# 连接超时时间（毫秒）
spring.redis.timeout=10000
# Redis默认情况下有16个分片，这里配置具体使用的分片，默认是0
spring.redis.database=0
# 连接池最大连接数（使用负值表示没有限制） 默认 8
spring.redis.lettuce.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制） 默认 -1
spring.redis.lettuce.pool.max-wait=-1
# 连接池中的最大空闲连接 默认 8
spring.redis.lettuce.pool.max-idle=8
# 连接池中的最小空闲连接 默认 0
spring.redis.lettuce.pool.min-idle=0

### RABBIRMQ CONFIG
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.virtual-host=/

# 手动ACK，不开启自动ACK模式，目的是为了防止报错后未正确处理消息丢失，默认为none
spring.rabbitmq.listener.simple.acknowledge-mode=manual

management.endpoints.web.exposure.include=*



# 描述信息
#info.blog-url=http://blog.schoki.com
#info.author=schoki
# 如果 Maven 插件没配置此处请注释掉
#info.version=@project.version@
#info.name=@project.artifactId@
# 选择激活对应环境的配置，如果是dev则代表不用认证就能访问监控页，prod代表需要认证

# 比较重要,默认 /actuator spring-boot-admin 扫描不到
#management.endpoints.web.base-path=/
#management.endpoint.health.show-details=always

#spring.boot.admin.client.url=http://localhost:8080
# 不配置老喜欢用主机名，看着不舒服....
#spring.boot.admin.client.instance.prefer-ip=true
# 登陆所需的账号密码
#spring.security.user.name=schoki
#spring.security.user.password=696181
# 便于客户端可以在受保护的服务器上注册api
#spring.boot.admin.client.username=schoki
#spring.boot.admin.client.password=696181
# 便服务器可以访问受保护的客户端端点
#spring.boot.admin.client.instance.metadata.user.name=schoki
#spring.boot.admin.client.instance.metadata.user.password=696181


### EUREKA CONFIG
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

eureka.instance.prefer-ip-address=true
eureka.instance.lease-expiration-duration-in-seconds=10
eureka.instance.lease-renewal-interval-in-seconds=10

logging.level.com.netflix.eureka=INFO
logging.level.com.netflix.discovery=INFO


# 禁用 thymeleaf 缓存
spring.thymeleaf.cache=false
# 是否支持批量上传   (默认值 true)
spring.servlet.multipart.enabled=true
# 上传文件的临时目录 （一般情况下不用特意修改）
spring.servlet.multipart.location=
# 上传文件最大为 1M （默认值 1M 根据自身业务自行控制即可）
spring.servlet.multipart.max-file-size=10485760
# 上传请求最大为 10M（默认值10M 根据自身业务自行控制即可）
spring.servlet.multipart.max-request-size=10485760
# 文件大小阈值，当大于这个阈值时将写入到磁盘，否则存在内存中，（默认值0 一般情况下不用特意修改）
spring.servlet.multipart.file-size-threshold=0
# 判断是否要延迟解析文件（相当于懒加载，一般情况下不用特意修改）
spring.servlet.multipart.resolve-lazily=false

my2.age=22
my2.name=schoki
my2.email=jzb219@gmail.com